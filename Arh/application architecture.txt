Клиент-серверная многопользовательская система - умный дом.
Описание : 
Система управляет параметрами дома, например: системой отопления, освещением, мультимедиа.
Система отслеживает ключевые параметры и возникновение нештаных ситуаций, примеры:
температура в помещениях, протечки систем водоснабжения или незапертая на ночь входная дверь.
Система осуществляет передачу информации пользователям (жильцам дома), принимает команды 
на управление домом, хранит историю событий.
Необходимые параметры задаются в настройках, некоторые из них постоянные другие выполняются по расписанию,
 третьи - разово, по команде от клиентского приложения.

Взаимодействие с клиентами:

Первоначальная настройка: Десктоп приложение, в нем задаются все необходимые настройки (более удобный интерфейс чем у смартфона),
можно предусмотреть функцию удаленной настройки например для специалиста фирмы поставщика системы "умный дом" 

Приложение на смартфоне: когда пользователь находится дома то приложение осуществляет свзяь по Wi-fi или Bluetooth,
если пользователь вне зоны действия домашнего соединения  - связь через интернет.
Внешний вид приложения адаптируется, дома - на первом месте наиболее типовые задачи для дома (управление освещением и т.д.),
вне дома - например данные о параметрах и планирование задач (например включить заранее теплый пол в выбранном помещении)

Также можно предусмотреть отправку через интернет показаний (расход воды, электроэнергия)
и  рассылку смс сообщений в случае ЧП (на номера пользователей и служб экстренного реагирования)

Необходимые данные данные сохраняются в файлах (история событий, данные видео наблюдения)

Для реализации выбрана многоуровневая архитектура.
Компоненты системы:
1. Клиентское приложение "тонкое" - позволяет выполнять управление системой не нагружая смартфон пользователей.
2. Десктоп приложение также "тонкое" позволяет подробно и удобно настроить систему.
3. Уровень бизнес логики - Сервер приложений J2EE,
 как современный, надежный и многофункциональный, обеспечивающий взаимодействие между компонентами системы
4. Внешние системы - датчики, видеокамеры, TV, муз. центр. устройства управления освещением и тд.
5. Файл сервер для хранения настроек системы, "истории" (в том числе данных с видео камер),
 а также файлов пользователей (видео, фото музыки...)

Для безопасности и надежности системы необходимо :
1. Сделать вход пользователей  в систему по логину-паролю.
2. Разграничить права доступа к файлам и компонентам системы
3. Настроить приоритеты процессов - жизненно важные процессы должны иметь наивысший приоритет как в каналах обемена  данными,
   так и в разпределении процессорных ресурсов.
4. Обеспечить физическую недоступность серверов и стабильность электропитания(резервное питание).